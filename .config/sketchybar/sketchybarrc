#!/bin/bash
# This is a demo config to showcase some of the most important commands.
# It is meant to be changed and configured, as it is intentionally kept sparse.
# For a (much) more advanced configuration example see my dotfiles:
# https://github.com/FelixKratz/dotfiles

PLUGIN_DIR="$CONFIG_DIR/plugins"

##### Bar Appearance #####
# Configuring the general appearance of the bar.
# These are only some of the options available. For all options see:
# https://felixkratz.github.io/SketchyBar/config/bar
# If you are looking for other colors, see the color picker:
# https://felixkratz.github.io/SketchyBar/config/tricks#color-picker

sketchybar --bar position=top height=35 blur_radius=30 color=0x40000000

##### Changing Defaults #####
# We now change some default values, which are applied to all further items.
# For a full list of all available item properties see:
# https://felixkratz.github.io/SketchyBar/config/items

default=(
  padding_left=5
  padding_right=5
  icon.font="FiraCode Nerd Font:Bold:17.0"
  label.font="FiraCode Nerd Font:Bold:14.0"
  icon.color=0xffffffff
  label.color=0xffffffff
  icon.padding_left=4
  icon.padding_right=4
  label.padding_left=4
  label.padding_right=4
)
sketchybar --default "${default[@]}"

##### Adding Mission Control Space Indicators #####
# Let's add some mission control spaces:
# https://felixkratz.github.io/SketchyBar/config/components#space----associate-mission-control-spaces-with-an-item
# to indicate active and available mission control spaces.

# SPACE_ICONS=("1" "2" "3" "4" "5" "6" "7" "8" "9" "10")
# for i in "${!SPACE_ICONS[@]}"
# do
#   sid="$(($i+1))"
#   space=(
#     space="$sid"
#     icon="${SPACE_ICONS[i]}"
#     icon.padding_left=7
#     icon.padding_right=7
#     background.color=0x40ffffff
#     background.corner_radius=5
#     background.height=25
#     label.drawing=off
#     script="$PLUGIN_DIR/space.sh"
#     click_script="yabai -m space --focus $sid"
#   )
#   sketchybar --add space space."$sid" left --set space."$sid" "${space[@]}"
# done

sketchybar --add event aerospace_workspace_change
for m in $(aerospace list-monitors | awk '{print $1}'); do
    for i in $(aerospace list-workspaces --monitor "$m"); do
        # NOTE: Or we might need `space_windows_change` ?
        # Ref: https://yangzhang.site/Note/Mac/sketchybar/#_7
        sketchybar --add item space."$i" left \
            --subscribe space."$i" aerospace_workspace_change \
            --set space."$i" \
                background.color=0x44ffffff \
                background.corner_radius=5 \
                background.height=20 \
                background.drawing=off \
                label="$i" \
                icon.padding_left=0 \
                icon.padding_right=0 \
                label.padding_left=10 \
                label.padding_right=10 \
                click_script="aerospace workspace $i" \
                script="$PLUGIN_DIR/aerospace.sh "$i" $m" \
                display=0
    done
    for i in $(aerospace list-workspaces --monitor "$m" --empty no); do
        sketchybar --set space."$i" display="$m"
    done
done
sketchybar --set space."$(aerospace list-workspaces --focused)" background.drawing=on

##### Adding Left Items #####
# We add some regular items to the left side of the bar, where
# only the properties deviating from the current defaults need to be set

sketchybar --add item chevron left \
           --set chevron label.drawing=off \
           --add item front_app left \
           --set front_app icon.drawing=off script="$PLUGIN_DIR/front_app.sh" \
           --subscribe front_app front_app_switched

##### Adding Right Items #####
# In the same way as the left items we can add items to the right side.
# Additional position (e.g. center) are available, see:
# https://felixkratz.github.io/SketchyBar/config/items#adding-items-to-sketchybar

# Some items refresh on a fixed cycle, e.g. the clock runs its script once
# every 10s. Other items respond to events they subscribe to, e.g. the
# volume.sh script is only executed once an actual change in system audio
# volume is registered. More info about the event system can be found here:
# https://felixkratz.github.io/SketchyBar/config/events

sketchybar --add item clock right \
           --set clock update_freq=1 icon=  script="$PLUGIN_DIR/clock.sh" \
           --add item battery right \
           --set battery update_freq=10 script="$PLUGIN_DIR/battery.sh" \
           --subscribe battery system_woke power_source_change \

volume=(
    update_freq=1
    script="$PLUGIN_DIR/volume.sh"
)
sketchybar --add item volume right \
           --subscribe volume volume_change \
           --set volume "${volume[@]}"


input_method=(
    update_freq=1
    script="$PLUGIN_DIR/input_method.sh"
    icon.padding_left=0
    icon.padding_right=0
)
sketchybar --add item input_method right --set input_method "${input_method[@]}"

wecom=(
    update_freq=1
    icon='󰘑^'
    script="$PLUGIN_DIR/app.sh WeCom"
    click_script='open -a /Applications/企业微信.app'
    display=0
)
sketchybar --add item wecom right --set wecom "${wecom[@]}"

wechat=(
    update_freq=1
    icon='󰘑'
    script="$PLUGIN_DIR/app.sh WeChat"
    click_script='open -a /Applications/WeChat.app'
    display=0
)
sketchybar --add item wechat right --set wechat "${wechat[@]}"

##### Force all scripts to run the first time (never do this in a script) #####
sketchybar --update
